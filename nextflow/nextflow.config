profiles {
    singularity {
        singularity.runOptions = "--writable-tmpfs -B /project/genomics/jru/data2:/project/genomics/jru/data2"
    }
    slurm_denglab {
        process.executor       = 'slurm'
        process.cpus           = 1
        process.memory         = '4 GB'
        process.queue          = 'cpu_p'
        process.clusterOptions = '-q cpu'
        process.time           = '40 h'
    }
    standard {
        process.executor       = 'local'
        process.cpus           = 1
        process.memory         = '4 GB'
    }
}


profiles {
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}


params {
    outdir                     = 'output'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'rellink'
}


process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

//    withLabel: vhydeg {
//        container = 'jinlongru/vhydeg'
//    }

    withLabel: vhydeg {
        conda = 'vhydeg'
    }

    withName: FASTP {
        ext.args = "-f 15 -t 1 -F 15 -T 1 --detect_adapter_for_pe -p -n 1 -l 30 -5 -W 4 -M 20 -r -c -g -x"
        cpus = 1
        memory = "10 GB"
    }
}


env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'vHyDeg'
    author          = 'Jinlong Ru'
    homePage        = 'https://github.com/deng-lab/vhydeg'
    description     = 'Virus-encoded hydrocarbon degradation genes'
    mainScript      = 'main.nf'
    nextflowVersion = '>=22.04.0'
    version         = '0.1'
}